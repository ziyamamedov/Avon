"use strict";

var token = "4fc049db594406eeb07d7bd5b94cddf43351e828";
var $country = $('#country');
var $region = $('#region');
var $city = $('#city');
var $street = $('#street');
$country.suggestions({
  token: token,
  type: "ADDRESS",
  count: 10,
  constraints: {
    locations: {
      country: "*"
    }
  },
  bounds: "country",
  hint: false,

  /* Вызывается, когда пользователь выбирает одну из подсказок */
  onSelect: function onSelect(suggestion) {
    console.log(suggestion);
  }
});
$region.suggestions({
  token: token,
  type: "ADDRESS",
  bounds: "region-area",
  constraints: $country,

  /* Вызывается, когда пользователь выбирает одну из подсказок */
  onSelect: function onSelect(suggestion) {
    console.log(suggestion);
  }
});
$city.suggestions({
  token: token,
  type: "ADDRESS",
  hint: false,
  bounds: "city-settlement",
  constraints: $region,

  /* Вызывается, когда пользователь выбирает одну из подсказок */
  onSelect: function onSelect(suggestion) {
    console.log(suggestion);
  }
});
$street.suggestions({
  token: token,
  type: "ADDRESS",
  hint: false,
  bounds: "street-house",
  constraints: $city,

  /* Вызывается, когда пользователь выбирает одну из подсказок */
  onSelect: function onSelect(suggestion) {
    console.log(suggestion);
  }
});
var swiper = new Swiper('.swiper-container', {
  // Optional parameters
  slidesPerView: 1,
  spaceBetween: 10,
  loop: true,
  // If we need pagination
  pagination: {
    el: '.swiper-pagination',
    clickable: true
  },
  breakpoints: {
    // when window width is >= 480px
    480: {
      slidesPerView: 2,
      spaceBetween: 20
    },
    // when window width is >= 640px
    640: {
      slidesPerView: 3,
      spaceBetween: 30
    }
  }
});
$('#prevbtn').on("click", function () {
  swiper.slidePrev();
});
$('#nextBtn').on("click", function () {
  swiper.slideNext();
});
var hamBtn = document.querySelector('#hamBtn');
var sidebar = document.querySelector('.sidebar');
var clsBtn = document.querySelector('#hamClsBtn');
hamBtn.addEventListener('click', function () {
  sidebar.classList.add('sidebar--active');
});
clsBtn.addEventListener('click', function () {
  sidebar.classList.remove('sidebar--active');
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZHJlc3MuanMiLCJjYXBhYmlsaXRpZXNfc2xpZGVyLmpzIiwiaGFtYnVyZ2VyLmpzIl0sIm5hbWVzIjpbInRva2VuIiwiJGNvdW50cnkiLCIkIiwiJHJlZ2lvbiIsIiRjaXR5IiwiJHN0cmVldCIsInN1Z2dlc3Rpb25zIiwidHlwZSIsImNvdW50IiwiY29uc3RyYWludHMiLCJsb2NhdGlvbnMiLCJjb3VudHJ5IiwiYm91bmRzIiwiaGludCIsIm9uU2VsZWN0Iiwic3VnZ2VzdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJzd2lwZXIiLCJTd2lwZXIiLCJzbGlkZXNQZXJWaWV3Iiwic3BhY2VCZXR3ZWVuIiwibG9vcCIsInBhZ2luYXRpb24iLCJlbCIsImNsaWNrYWJsZSIsImJyZWFrcG9pbnRzIiwib24iLCJzbGlkZVByZXYiLCJzbGlkZU5leHQiLCJoYW1CdG4iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzaWRlYmFyIiwiY2xzQnRuIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFBQSxLQUFBLEdBQUEsMENBQUE7QUFFQSxJQUFBQyxRQUFBLEdBQUFDLENBQUEsQ0FBQSxVQUFBLENBQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFELENBQUEsQ0FBQSxTQUFBLENBQUE7QUFDQSxJQUFBRSxLQUFBLEdBQUFGLENBQUEsQ0FBQSxPQUFBLENBQUE7QUFDQSxJQUFBRyxPQUFBLEdBQUFILENBQUEsQ0FBQSxTQUFBLENBQUE7QUFFQUQsUUFBQSxDQUFBSyxXQUFBLENBQUE7QUFDQU4sRUFBQUEsS0FBQSxFQUFBQSxLQURBO0FBRUFPLEVBQUFBLElBQUEsRUFBQSxTQUZBO0FBR0FDLEVBQUFBLEtBQUEsRUFBQSxFQUhBO0FBSUFDLEVBQUFBLFdBQUEsRUFBQTtBQUNBQyxJQUFBQSxTQUFBLEVBQUE7QUFBQUMsTUFBQUEsT0FBQSxFQUFBO0FBQUE7QUFEQSxHQUpBO0FBT0FDLEVBQUFB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QUEsRUFBQSxZQUFBO0FBQ0FGLEVBQUFBLE9BQUEsQ0FBQUcsU0FBQSxDQUFBRSxNQUFBLENBQUEsaUJBQUE7QUFDQSxDQUZBIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdG9rZW4gPSBcIjRmYzA0OWRiNTk0NDA2ZWViMDdkN2JkNWI5NGNkZGY0MzM1MWU4MjhcIjtcclxuXHJcbnZhciAkY291bnRyeSA9ICQoJyNjb3VudHJ5Jyk7XHJcbnZhciAkcmVnaW9uID0gJCgnI3JlZ2lvbicpO1xyXG52YXIgJGNpdHkgPSAkKCcjY2l0eScpO1xyXG52YXIgJHN0cmVldCA9ICQoJyNzdHJlZXQnKTtcclxuXHJcbiRjb3VudHJ5LnN1Z2dlc3Rpb25zKHtcclxuICB0b2tlbjogdG9rZW4sXHJcbiAgdHlwZTogXCJBRERSRVNTXCIsXHJcbiAgY291bnQgOjEwLFxyXG4gIGNvbnN0cmFpbnRzOntcclxuICAgIGxvY2F0aW9uczoge2NvdW50cnk6IFwiKlwifVxyXG4gIH0sXHJcbiAgYm91bmRzOiBcImNvdW50cnlcIixcclxuICBoaW50OiBmYWxzZSxcclxuICAvKiDQktGL0LfRi9Cy0LDQtdGC0YHRjywg0LrQvtCz0LTQsCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0LLRi9Cx0LjRgNCw0LXRgiDQvtC00L3RgyDQuNC3INC/0L7QtNGB0LrQsNC30L7QuiAqL1xyXG4gIG9uU2VsZWN0OiBmdW5jdGlvbihzdWdnZXN0aW9uKSB7XHJcbiAgICBjb25zb2xlLmxvZyhzdWdnZXN0aW9uKTtcclxuICB9XHJcbn0pO1xyXG5cclxuJHJlZ2lvbi5zdWdnZXN0aW9ucyh7XHJcbiAgdG9rZW46IHRva2VuLFxyXG4gIHR5cGU6IFwiQUREUkVTU1wiLFxyXG4gIGJvdW5kczogXCJyZWdpb24tYXJlYVwiLFxyXG4gIGNvbnN0cmFpbnRzOiAkY291bnRyeSxcclxuICAvKiDQktGL0LfRi9Cy0LDQtdGC0YHRjywg0LrQvtCz0LTQsCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0LLRi9Cx0LjRgNCw0LXRgiDQvtC00L3RgyDQuNC3INC/0L7QtNGB0LrQsNC30L7QuiAqL1xyXG4gIG9uU2VsZWN0OiBmdW5jdGlvbihzdWdnZXN0aW9uKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHN1Z2dlc3Rpb24pO1xyXG4gIH1cclxufSk7XHJcblxyXG4kY2l0eS5zdWdnZXN0aW9ucyh7XHJcbiAgdG9rZW46IHRva2VuLFxyXG4gIHR5cGU6IFwiQUREUkVTU1wiLFxyXG4gIGhpbnQ6IGZhbHNlLFxyXG4gIGJvdW5kczogXCJjaXR5LXNldHRsZW1lbnRcIixcclxuICBjb25zdHJhaW50czogJHJlZ2lvbixcclxuICAvKiDQktGL0LfRi9Cy0LDQtdGC0YHRjywg0LrQvtCz0LTQsCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0LLRi9Cx0LjRgNCw0LXRgiDQvtC00L3RgyDQuNC3INC/0L7QtNGB0LrQsNC30L7QuiAqL1xyXG4gIG9uU2VsZWN0OiBmdW5jdGlvbihzdWdnZXN0aW9uKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHN1Z2dlc3Rpb24pO1xyXG4gIH1cclxufSk7XHJcblxyXG4kc3RyZWV0LnN1Z2dlc3Rpb25zKHtcclxuICB0b2tlbjogdG9rZW4sXHJcbiAgdHlwZTogXCJBRERSRVNTXCIsXHJcbiAgaGludDogZmFsc2UsXHJcbiAgYm91bmRzOiBcInN0cmVldC1ob3VzZVwiLFxyXG4gIGNvbnN0cmFpbnRzOiAkY2l0eSxcclxuICAvKiDQktGL0LfRi9Cy0LDQtdGC0YHRjywg0LrQvtCz0LTQsCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Ywg0LLRi9Cx0LjRgNCw0LXRgiDQvtC00L3RgyDQuNC3INC/0L7QtNGB0LrQsNC30L7QuiAqL1xyXG4gIG9uU2VsZWN0OiBmdW5jdGlvbihzdWdnZXN0aW9uKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKHN1Z2dlc3Rpb24pO1xyXG4gIH1cclxufSk7XHJcbiIsImNvbnN0IHN3aXBlciA9IG5ldyBTd2lwZXIoJy5zd2lwZXItY29udGFpbmVyJywge1xyXG4gIC8vIE9wdGlvbmFsIHBhcmFtZXRlcnNcclxuICBzbGlkZXNQZXJWaWV3OiAxLFxyXG4gIHNwYWNlQmV0d2VlbjogMTAsXHJcbiAgbG9vcDogdHJ1ZSxcclxuICBcclxuICAvLyBJZiB3ZSBuZWVkIHBhZ2luYXRpb25cclxuICBwYWdpbmF0aW9uOiB7XHJcbiAgICBlbDogJy5zd2lwZXItcGFnaW5hdGlvbicsXHJcbiAgICBjbGlja2FibGU6IHRydWVcclxuICB9LFxyXG4gIGJyZWFrcG9pbnRzOiB7XHJcbiAgICAvLyB3aGVuIHdpbmRvdyB3aWR0aCBpcyA+PSA0ODBweFxyXG4gICAgNDgwOiB7XHJcbiAgICAgIHNsaWRlc1BlclZpZXc6IDIsXHJcbiAgICAgIHNwYWNlQmV0d2VlbjogMjBcclxuICAgIH0sXHJcbiAgICAvLyB3aGVuIHdpbmRvdyB3aWR0aCBpcyA+PSA2NDBweFxyXG4gICAgNjQwOiB7XHJcbiAgICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbiAgICAgIHNwYWNlQmV0d2VlbjogMzBcclxuICAgIH1cclxuICB9XHJcbn0pO1xyXG5cclxuJCgnI3ByZXZidG4nKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKCl7XHJcbiAgc3dpcGVyLnNsaWRlUHJldigpO1xyXG59KTtcclxuJCgnI25leHRCdG4nKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKCl7XHJcbiAgc3dpcGVyLnNsaWRlTmV4dCgpO1xyXG59KTtcclxuIiwiY29uc3QgaGFtQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2hhbUJ0bicpO1xyXG5jb25zdCBzaWRlYmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNpZGViYXInKTtcclxuY29uc3QgY2xzQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2hhbUNsc0J0bicpXHJcblxyXG5oYW1CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgc2lkZWJhci5jbGFzc0xpc3QuYWRkKCdzaWRlYmFyLS1hY3RpdmUnKTtcclxufSlcclxuY2xzQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIHNpZGViYXIuY2xhc3NMaXN0LnJlbW92ZSgnc2lkZWJhci0tYWN0aXZlJyk7IFxyXG59KVxyXG4iXX0=
