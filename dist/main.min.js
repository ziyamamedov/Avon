"use strict";

var token = "4fc049db594406eeb07d7bd5b94cddf43351e828";
var $country = $('#country');
var $region = $('#region');
var $city = $('#city');
var $street = $('#street');
$country.suggestions({
  token: token,
  type: "ADDRESS",
  count: 10,
  constraints: {
    locations: {
      country: "*"
    }
  },
  bounds: "country",
  hint: false,

  /* Вызывается, когда пользователь выбирает одну из подсказок */
  onSelect: function onSelect(suggestion) {
    console.log(suggestion);
  }
});
$region.suggestions({
  token: token,
  type: "ADDRESS",
  bounds: "region-area",
  constraints: $country,

  /* Вызывается, когда пользователь выбирает одну из подсказок */
  onSelect: function onSelect(suggestion) {
    console.log(suggestion);
  }
});
$city.suggestions({
  token: token,
  type: "ADDRESS",
  hint: false,
  bounds: "city-settlement",
  constraints: $region,

  /* Вызывается, когда пользователь выбирает одну из подсказок */
  onSelect: function onSelect(suggestion) {
    console.log(suggestion);
  }
});
$street.suggestions({
  token: token,
  type: "ADDRESS",
  hint: false,
  bounds: "street-house",
  constraints: $city,

  /* Вызывается, когда пользователь выбирает одну из подсказок */
  onSelect: function onSelect(suggestion) {
    console.log(suggestion);
  }
});
var swiper = new Swiper('.swiper-container', {
  // Optional parameters
  slidesPerView: 1,
  spaceBetween: 10,
  loop: true,
  // If we need pagination
  pagination: {
    el: '.swiper-pagination',
    clickable: true
  },
  breakpoints: {
    // when window width is >= 480px
    480: {
      slidesPerView: 2,
      spaceBetween: 20
    },
    // when window width is >= 640px
    640: {
      slidesPerView: 3,
      spaceBetween: 30
    }
  }
});
$('#prevbtn').on("click", function () {
  swiper.slidePrev();
});
$('#nextBtn').on("click", function () {
  swiper.slideNext();
});
var sliderList = $('#catalogueSliderList');
/*XHr request which tells us how many images are there in the
  catalogue folder, which we need to build our slider */

$('#cat-btn').on('click', function (e) {
  e.preventDefault();
  $.ajax({
    type: 'GET',
    url: "./php/catalogue-load.php",
    dataType: 'text',
    success: function success(data) {
      var numData = Number(data);
      console.log(data);
      var catalogueSwiper = new Swiper('.swiper-container_cat', {
        slidesPerView: 1,
        spaceBetween: 10,
        virtual: {
          slides: function () {
            var slides = [];

            for (var i = 0; i < numData; i++) {
              slides.push(" <div class=\"catalogues__slider-item-col\"><img class=\"catalogue__slider-item-img\" src=\"./images/catalogue/02_2021/".concat(i, ".jpg\" alt=\"\u041A\u0430\u0442\u0430\u043B\u043E\u0433 2 2021\"></div>\n                            <div class=\"catalogues__slider-item-col\"><img class=\"catalogue__slider-item-img\" src=\"./images/catalogue/02_2021/").concat(i + 1, ".jpg\" alt=\"\u041A\u0430\u0442\u0430\u043B\u043E\u0433 2 2021\"></div>\n                          "));
              i++;
            }

            return slides;
          }()
        }
      });
      $('.catalogues__slider-prev-btn').on('click', function () {
        catalogueSwiper.slidePrev();
      });
      $('.catalogues__slider-next-btn').on('click', function () {
        catalogueSwiper.slideNext();
      });
      catalogueSwiper.append(); // for(let i = 0; i < numData - 3; i++) {
      //   sliderList.append(`<li class="catalogues__slider-item swiper-slide">
      //                         <div class="catalogues__slider-item-col"><img class="catalogue__slider-item-img" src="./images/catalogue/02_2021/p (${i}).jpg" alt="Каталог 2 2021"></div>
      //                         <div class="catalogues__slider-item-col"><img class="catalogue__slider-item-img" src="./images/catalogue/02_2021/p (${i+1}).jpg" alt="Каталог 2 2021"></div>
      //                       </li>`);
      //   i++;
      // }
    }
  });
});
var hamBtn = document.querySelector('#hamBtn');
var sidebar = document.querySelector('.sidebar');
var clsBtn = document.querySelector('#hamClsBtn');
hamBtn.addEventListener('click', function () {
  sidebar.classList.add('sidebar--active');
});
clsBtn.addEventListener('click', function () {
  sidebar.classList.remove('sidebar--active');
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
